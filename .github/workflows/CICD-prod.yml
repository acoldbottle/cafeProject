name: CICD-prod

on:
  push:
    branches:
      - develop

jobs:
  ci:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Create Application.yml
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.PROD_APPLICATION_YML }}" > src/main/resources/application.yml

      - name: Docker Login
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKER_LOGIN_USERNAME }}
          password: ${{ secrets.DOCKER_LOGIN_PASSWORD }}

      - name: Docker Set up Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker Image Build and Push
        run: |
          docker buildx build --platform linux/amd64 -t acoldbottle/backend-app:latest -f prod.Dockerfile --load .
          docker push acoldbottle/backend-app:latest
          
  cd:
    needs: ci
    runs-on: ubuntu-22.04

    steps:
      - name: deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          script: |
            cd backend
            
            docker stop backend-app
            export $(grep -v '^#' .env.prod | xargs) && docker compose -f docker-compose-prod.yml up --build -d
            docker image prune -f

      - name: Update Release
        uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter-config.yml
        env:
          GITHUB_TOKEN: ${{ secrets.ACTION_TOKEN  }}
